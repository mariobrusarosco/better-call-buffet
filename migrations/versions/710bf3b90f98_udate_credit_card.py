"""udate_credit_card

Revision ID: 710bf3b90f98
Revises: 5c226dee95b7
Create Date: 2025-06-15 13:34:41.451572

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "710bf3b90f98"
down_revision: Union[str, None] = "5c226dee95b7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("accounts_user_id_fkey", "accounts", type_="foreignkey")
    op.drop_constraint("accounts_broker_id_fkey", "accounts", type_="foreignkey")
    op.create_foreign_key(None, "accounts", "users", ["user_id"], ["id"])
    op.create_foreign_key(None, "accounts", "brokers", ["broker_id"], ["id"])
    op.add_column("credit_cards", sa.Column("brand", sa.String(), nullable=False))
    op.alter_column(
        "credit_cards", "due_date", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "credit_cards",
        "balance",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.create_index(
        op.f("ix_credit_cards_balance"), "credit_cards", ["balance"], unique=False
    )
    op.create_index(
        op.f("ix_credit_cards_brand"), "credit_cards", ["brand"], unique=False
    )
    op.create_index(
        op.f("ix_credit_cards_due_date"), "credit_cards", ["due_date"], unique=False
    )
    op.create_index(
        op.f("ix_credit_cards_is_active"), "credit_cards", ["is_active"], unique=False
    )
    op.create_index(
        op.f("ix_credit_cards_is_deleted"), "credit_cards", ["is_deleted"], unique=False
    )
    op.create_index(
        op.f("ix_credit_cards_name"), "credit_cards", ["name"], unique=False
    )
    op.create_unique_constraint(
        "uix_name_broker_account", "credit_cards", ["name", "broker_id", "account_id"]
    )
    op.drop_column("credit_cards", "description")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "credit_cards",
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_constraint("uix_name_broker_account", "credit_cards", type_="unique")
    op.drop_index(op.f("ix_credit_cards_name"), table_name="credit_cards")
    op.drop_index(op.f("ix_credit_cards_is_deleted"), table_name="credit_cards")
    op.drop_index(op.f("ix_credit_cards_is_active"), table_name="credit_cards")
    op.drop_index(op.f("ix_credit_cards_due_date"), table_name="credit_cards")
    op.drop_index(op.f("ix_credit_cards_brand"), table_name="credit_cards")
    op.drop_index(op.f("ix_credit_cards_balance"), table_name="credit_cards")
    op.alter_column(
        "credit_cards",
        "balance",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.alter_column(
        "credit_cards", "due_date", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.drop_column("credit_cards", "brand")
    op.drop_constraint(None, "accounts", type_="foreignkey")
    op.drop_constraint(None, "accounts", type_="foreignkey")
    op.create_foreign_key(
        "accounts_broker_id_fkey",
        "accounts",
        "brokers",
        ["broker_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "accounts_user_id_fkey",
        "accounts",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###
