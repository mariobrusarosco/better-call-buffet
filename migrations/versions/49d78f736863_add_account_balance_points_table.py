"""Add account balance points table

Revision ID: 49d78f736863
Revises: deccb923a8f9
Create Date: 2025-04-30 10:44:13.108453

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "49d78f736863"
down_revision: Union[str, None] = "deccb923a8f9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "balance_points",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("balance", sa.Float(), nullable=False),
        sa.Column("note", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["account_id"], ["accounts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_balance_points_account_id", "balance_points", ["account_id"], unique=False
    )
    op.create_index("ix_balance_points_date", "balance_points", ["date"], unique=False)
    op.create_index(
        op.f("ix_balance_points_id"), "balance_points", ["id"], unique=False
    )
    op.drop_index(
        "ix_investment_balance_points_date", table_name="investment_balance_points"
    )
    op.drop_index(
        "ix_investment_balance_points_id", table_name="investment_balance_points"
    )
    op.drop_index(
        "ix_investment_balance_points_investment_id",
        table_name="investment_balance_points",
    )
    op.drop_table("investment_balance_points")
    op.drop_index("ix_investments_account_id", table_name="investments")
    op.drop_index("ix_investments_broker_id", table_name="investments")
    op.drop_index("ix_investments_id", table_name="investments")
    op.drop_index("ix_investments_symbol", table_name="investments")
    op.drop_index("ix_investments_user_id", table_name="investments")
    op.drop_table("investments")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "investments",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("symbol", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "quantity",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "current_price",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("currency", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("account_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("broker_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
            name="investments_account_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["broker_id"],
            ["brokers.id"],
            name="investments_broker_id_fkey",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="investments_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="investments_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_investments_user_id", "investments", ["user_id"], unique=False)
    op.create_index("ix_investments_symbol", "investments", ["symbol"], unique=False)
    op.create_index("ix_investments_id", "investments", ["id"], unique=False)
    op.create_index(
        "ix_investments_broker_id", "investments", ["broker_id"], unique=False
    )
    op.create_index(
        "ix_investments_account_id", "investments", ["account_id"], unique=False
    )
    op.create_table(
        "investment_balance_points",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("investment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column(
            "quantity",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "price",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "total_value",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["investment_id"],
            ["investments.id"],
            name="investment_balance_points_investment_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="investment_balance_points_pkey"),
    )
    op.create_index(
        "ix_investment_balance_points_investment_id",
        "investment_balance_points",
        ["investment_id"],
        unique=False,
    )
    op.create_index(
        "ix_investment_balance_points_id",
        "investment_balance_points",
        ["id"],
        unique=False,
    )
    op.create_index(
        "ix_investment_balance_points_date",
        "investment_balance_points",
        ["date"],
        unique=False,
    )
    op.drop_index(op.f("ix_balance_points_id"), table_name="balance_points")
    op.drop_index("ix_balance_points_date", table_name="balance_points")
    op.drop_index("ix_balance_points_account_id", table_name="balance_points")
    op.drop_table("balance_points")
    # ### end Alembic commands ###
