"""Initial migration with UUID primary keys

Revision ID: deccb923a8f9
Revises: 
Create Date: 2025-04-29 20:48:20.511122

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "deccb923a8f9"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "brokers",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("colors", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("logo", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_brokers_id"), "brokers", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_users_email_unique", "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "accounts",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("balance", sa.Float(), nullable=False),
        sa.Column("currency", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_accounts_id"), "accounts", ["id"], unique=False)
    op.create_index("ix_accounts_type", "accounts", ["type"], unique=False)
    op.create_index("ix_accounts_user_id", "accounts", ["user_id"], unique=False)
    op.create_table(
        "investments",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("quantity", sa.Float(), nullable=False),
        sa.Column("current_price", sa.Float(), nullable=False),
        sa.Column("currency", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("account_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("broker_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["account_id"], ["accounts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["broker_id"], ["brokers.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_investments_account_id", "investments", ["account_id"], unique=False
    )
    op.create_index(
        "ix_investments_broker_id", "investments", ["broker_id"], unique=False
    )
    op.create_index(op.f("ix_investments_id"), "investments", ["id"], unique=False)
    op.create_index("ix_investments_symbol", "investments", ["symbol"], unique=False)
    op.create_index("ix_investments_user_id", "investments", ["user_id"], unique=False)
    op.create_table(
        "investment_balance_points",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("investment_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("quantity", sa.Float(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("total_value", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["investment_id"], ["investments.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_investment_balance_points_date",
        "investment_balance_points",
        ["date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_investment_balance_points_id"),
        "investment_balance_points",
        ["id"],
        unique=False,
    )
    op.create_index(
        "ix_investment_balance_points_investment_id",
        "investment_balance_points",
        ["investment_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_investment_balance_points_investment_id",
        table_name="investment_balance_points",
    )
    op.drop_index(
        op.f("ix_investment_balance_points_id"), table_name="investment_balance_points"
    )
    op.drop_index(
        "ix_investment_balance_points_date", table_name="investment_balance_points"
    )
    op.drop_table("investment_balance_points")
    op.drop_index("ix_investments_user_id", table_name="investments")
    op.drop_index("ix_investments_symbol", table_name="investments")
    op.drop_index(op.f("ix_investments_id"), table_name="investments")
    op.drop_index("ix_investments_broker_id", table_name="investments")
    op.drop_index("ix_investments_account_id", table_name="investments")
    op.drop_table("investments")
    op.drop_index("ix_accounts_user_id", table_name="accounts")
    op.drop_index("ix_accounts_type", table_name="accounts")
    op.drop_index(op.f("ix_accounts_id"), table_name="accounts")
    op.drop_table("accounts")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index("ix_users_email_unique", table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_brokers_id"), table_name="brokers")
    op.drop_table("brokers")
    # ### end Alembic commands ###
