name: Deploy to Elastic Beanstalk

on:
  workflow_run:
    workflows: ["CI"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if the CI workflow succeeded or if manually triggered
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install dependencies directly from requirements.txt if it exists
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        # If no requirements.txt, try to generate it from pyproject.toml
        elif [ -f pyproject.toml ]; then
          # Install poetry using pip instead of the installer script
          pip install poetry==1.6.1
          # Try to export requirements, but don't fail if it doesn't work
          poetry export -f requirements.txt --output requirements.txt --without-hashes || echo "Poetry export failed, continuing..."
          # If requirements.txt was created, install from it
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # Manual fallback: install the minimum required packages
            pip install fastapi uvicorn sqlalchemy psycopg2-binary pydantic
          fi
        else
          # Fallback: install the minimum required packages
          pip install fastapi uvicorn sqlalchemy psycopg2-binary pydantic
        fi
    
    - name: Generate deployment package
      run: |
        # Create Procfile
        echo "web: python -m uvicorn app.main:app --host 0.0.0.0 --port \$PORT" > Procfile
        
        # Create necessary directories
        mkdir -p .ebextensions logs
        
        # Create Python config
        cat > .ebextensions/01_python.config << EOF
        option_settings:
          aws:elasticbeanstalk:container:python:
            WSGIPath: app.main:app
          aws:elasticbeanstalk:application:environment:
            PYTHONPATH: "/var/app/current"
        EOF
        
        # Create logging config
        cat > .ebextensions/02_logging.config << EOF
        files:
          "/opt/elasticbeanstalk/tasks/publishlogs.d/better-call-buffet.conf":
            mode: "000755"
            owner: root
            group: root
            content: |
              /var/app/current/logs/*.log
              /var/app/current/logs/*.err
              
          "/etc/logrotate.elasticbeanstalk.hourly/logrotate.elasticbeanstalk.better-call-buffet.conf":
            mode: "000755"
            owner: root
            group: root
            content: |
              /var/app/current/logs/*.log {
                size 10M
                rotate 5
                missingok
                compress
                notifempty
                copytruncate
                dateext
                dateformat -%Y%m%d-%H%M%S
              }
        EOF
        
        touch logs/app.log
        
        # Create zip file
        zip -r deploy.zip . -x ".git/*" ".github/*" "venv/*" ".venv/*" "__pycache__/*" "*.pyc" "*.pyo" "*.pyd" "tests/*"
    
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: better-call-buffet
        environment_name: Better-call-buffet-prod-env
        version_label: better-call-buffet-${{ github.run_id }}-${{ github.run_number }}
        region: us-east-1
        deployment_package: deploy.zip
        existing_bucket_name: ${{ secrets.AWS_S3_BUCKET_FOR_DEPLOYS }}  # Optional
        use_existing_version_if_available: true
    
    - name: Verify deployment
      run: |
        echo "Deployment to Elastic Beanstalk completed!"
        echo "Waiting for environment to be ready..."
        sleep 30
        # Optional: Add additional verification steps here
        
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Deployment Status
        run: |
          if [ ${{ needs.deploy.result }} == 'success' ]; then
            echo "Deployment completed successfully"
          else
            echo "Deployment failed"
          fi 