name: Build and Deploy to App Runner

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: better-call-buffet
  AWS_ACCOUNT_ID: 895583929848

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run linters and tests
        run: |
          poetry run black . --check

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: lint-and-test
    permissions:
      id-token: write # Required for federated login to AWS
      contents: read # Required to checkout the code

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActions-ECR-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Deploy to App Runner
        run: |
          aws apprunner start-deployment --service-arn arn:aws:apprunner:${{ env.AWS_REGION }}:${{ env.AWS_ACCOUNT_ID }}:service/better-call-buffet-prod-prod

          aws apprunner update-service \
            --service-arn arn:aws:apprunner:us-east-2:895583929848:service/better-call-buffet-prod/e7b15d55a36a45d98c4cb3be9f38a582 \
            --source-configuration '{
              "ImageRepository": {
                "ImageIdentifier": "895583929848.dkr.ecr.us-east-2.amazonaws.com/better-call-buffet:latest",
                "ImageConfiguration": {
                  "Port": "8000",
                  "RuntimeEnvironmentVariables": {
                    "ENVIRONMENT": "production"
                  }
                },
                "ImageRepositoryType": "ECR"
              },
              "AutoDeploymentsEnabled": false
            }' \
            --region us-east-2
